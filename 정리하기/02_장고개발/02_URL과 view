/ 장고기본요소 /

장고 개발을 하는데 필요한 기본내용을 익히자

/ 목표 /

1. urls.py 파일을 이용해 URL과 매핑되는 view 함수를 관리하기
2. 장고 ORM을 이용해 데이터베이스를 제어하기
3. 파이보 게시판에 질문 목록과 질문 상세 기능을 만들기


1. urls.py 파일을 이용해 URL과 매핑되는 view 함수를 관리하기



/ -- 1. 앱(App) /

앞서서 mysite프로젝트를 생성했지만 이 프로젝트 단독으로는 아무것도 할 수 없다. 프로젝트에 기능을 추가하기 위해서 앱을 생성해야 한다. 이제 게시판 기능을 담당할 pybo 앱을 생성하자

Ex)
  (mysite) C:\projects\mysite> django-admin startapp pybo
  (mysite) C:\projects\mysite>


django 장고프로그램에서 / -admin 관리자 이름 / startapp 앱을 만든다 / pybo 앱이름 

이렇게 실행하면 pybo라는 폴더가 만들어 진다.


/ -- 2. Hello Pybo / 

pybo app을 만들었다. 이제 서버를 실행해 pybo웹페이지에 진입을 해보자 



/ 2.1 사이트에 진입하기 /

사이트에 들어가서 pybo앱이 잘구됭 되는지 확인해보자

http://localhost:8000/pybo/ 사이트로 진입이 가능하다

진입을 하게 되면 Page not found(404) 페이지가 가동된다.

장고는 오류가 발생하면 사이트에서 오류가 일어난 위치에 대해서 자세히 보여주기 때문에 오류를 파악하기 상대적으로 쉽다. 오류의 내용은 이렇게 되어 있다.

Ex) 
    Using the URLconf defined in config.urls, Django tried these URL patterns, in this order:

      admin/
    The current path, pybo/, didn’t match any of these.


오류 내용을 확인해보면 config/urls.py 파일에 요청한 pybo/ URL에 해당되는 매핑이 없다라고 적혀 있다.

이 오류를 해결하기 위해서 해야 할 것은 config/urls.py 파일에 pybo/ URL에 대한 매핑을 추가하면 된다.

urls.py 파일은 페이지에 요청이 들어오면 가장 먼저 호출이 되는 파일로 URL과 view함수 간의 매핑을 정의한다.



/ 2.2 urls.py 만들기 /

URL 매핑을 추가하기 위해서 config/urls.py 파일에 다음과 같이 수정하자

// config/urls.py

Before)
    from django.contrib import admin
    from django.urls import path

    urlpatterns = [
        path('admin/', admin.site.urls),
    ]

After)
    from django.contrib import admin
    from django.urls import path
    from pybo import views

    urlpatterns = [
        path('admin/', admin.site.urls),
        path('pybo/', views.index),
    ]

URL = URL(Uniform Resource Locator 또는 통칭 web address

로컬 서버에서 pybo/ URL이 요청되면 views.index 를 호출하라는 매핑을 urlpatterns 에 추가하였다.

urlpatterns 에서 실제 URL은 http://localhost:8000/pybo 이지만 호스트명과 포트가 생략된 pybo/로 매핑해야 한다. 왜냐하면 호스트 (Ex : localhost)와 포트 (Ex : 8000)는 서버가 어떤 환경에서 실행되는지에 따라서 변하기 때문이다.

또 한가지 pybo/를 pybo라고 하지 않고 뒤에 / 를 하나 더 붙여 주는 이유는 브라우저 주소창에 http://localhost:8000/pybo 라고 입력해도 자동으로 http://localhost:8000/pybo/ 로 치환된다. 이렇게 되는 이유는 URL을 정규화하는 장고의 기능 때문이다. 특별한 경우가 아니라면 URl 매핑시 항상 끝에 / 를 붙여 주자


KeyPoint)
  1. views.index는 pybo/views.py 파일의 index함수를 말한다.
  2. 실제 URL은 http://localhost:8000/pybo 이지만 호스트명과 포트가 생략된 pybo/로 매핑해야 한다.
  3. URL패턴을 추가할 때, 앱 이름 뒤에 항상 '/' 를 붙여 넣자.



/ 2.3 views.py 만들기 /

이제 views.index 라는 path가 이동할 views.index 함수를 만들어 보자.

// pybo/views.py

Ex) 
    from django.http import HttpResponse

    def index(request) :
      return HttpResponse("Hello Pybo")


HttpResponse은 요청에 대한 응답을 할 때 사용된다. 여기서는 Hello Pybo라는 문자열을 출력하기 위해 사용되었다.

index함수의 매개변수 request는 HTTP 요청에 대한 객체이다.


이제 서버에 접속해보면 hello pybo라는 값이 출력된 것을 확인할 수 있다.

---------------------------------------------------------

/ 장고 개발 흐름 정리하기 / 

http://localhost:8000/pybo 을 요청시에 /pybo -> views.index -> def index(request) -> http://localhost:8000/pybo

  1. 브루아저에서 로컬서버로 http://localhost:8000/pybo 페이지를 요청한다
  2. urls.py 파일에서 /pybo URL 매핑을 확인하여 views.py 파일의 index 함수를 호출한다.
  3. 호출한 결과를 브라우저에 반영한다.

---------------------------------------------------------


/ 2.4 URL 분리 /

앞서서 한 urls.py에서 path를 설정하고 인터넷에 /pybo라는 값을 전달하면 urls.py 파일에 설정된 pybo앱 안에 있는 views.py의 index 함수로 주소값을 찾아서 주소에 맞는 함수를 실행한다.


  pybo 앱은 pybo와 관련된 디렉터리 하위에 위치하는 것이 좋다. 그렇지만 이렇게 하면 매번 pybo에 관련된 URL매핑을 추가할 때마다 config/urls.py 파일을 계속 수정해야 한다. 

  config에 있는 urls.py 파일은 앱이 아니라 프로젝트 성격의 파일이므로 이곳에는 프로젝트 성격의 URL 매핑만 추가되는게 맞다.

  따라서 pybo앱에서만 사용하는 URL 매핑을 config 폴더안에 계속 추가하는 것은 좋은 방법이 아니다.

따라서 분리를 해줄 필요가 있다.

config/urls.py

Before)
    from django.contrib import admin
    from django.urls import path
    from pybo import views

    urlpatterns = [
      path('admin/', admin.site.urls),
      path('pybo/', views.index),
    ]

After)
    from django.contrib import admin
    from django.urls import path, include

    urlpatterns = [
      path('admin/', admin.site.urls),
      path('pybo/', include('pybo.urls')),
    ]


path('pybo/', include('pybo.urls'))의 의미는 pybo/로 시작하는 페이지를 요청하면 이제 pybo/urls.py 파일의 매핑 정보를 읽어서 처리하라는 의미이다.

pybo/question/create, pybo/answer/create 등의 pybo/로 시작하는 URL을 추가해야 할 때 config/urls.py 파일을 수정할 필요없이 pybo/urls.py 파일만 수정하면 된다.

이제 pybo/urls.py 파일을 생성하면 된다. 

Ex) 
    import django.urls import path
    form . import views

    urlpatterns = [
      path('', views.index)
    ]

'' 가 사용된 이유는 config/urls.py 에서 매핑될 때 이미 pybo/가 사용되었기 때문이다.

즉, pybo/ URL은 다음처럼 config/urls.py 에서 매핑된 pybo/ 와 pybo/urls.py에서 매핑된 '' 이 더해져서 pybo/가 되기 때문에, pybo/urls.py 에는 pybo/가 생략된 상태로 작성하면 된다.

