/ 앵커 /

발견된 문제점은 답글을 작성하거나 수정한 후에 항상 페이지 상단으로 스크롤이 이동되기 때문에 본인이 작성한 답변을 확인하려면 다시 스크롤을 내려서 확인해야 한다는 점이다. Ajax와 같은 비동기 통신 기술을 사용하여 이 문제를 해결할 수도 있지만 여기서는 보다 쉬운 방법으로 이 문제를 해결해 보자.

HTML에는 URL 호출시 원하는 위치로 이동시켜 주는 앵커(anchor) 태그가 있다. 예를 들어 HTML 중간에 <a id="django"></a> 라는 앵커 태그가 있다면 이 HTML을 호출하는 URL 뒤에 #django 라고 붙여주면 해당 페이지가 호출되면서 해당 앵커로 스크롤이 이동된다.

답변등록, 답변수정, 답변추천시 앵커 태그를 이용하여 원하는 위치로 이동할 수 있도록 수정해 보자.


1. 답변 앵커
2. 답변 앵커 확인


/ -- 1. 답변 앵커 /

먼저 답변 작성, 수정시에 이동해야할 앵커 태그를 질문 상세 템플릿에 추가하자.

"templates/pybo/question_detail.html"

Ex)
<h5 class="border-bottom my-3 py-2">{{question.answer_set.count}}개의 답변이 있습니다.</h5>
{% for answer in question.answer_set.all %}
<a id="answer_{{ answer.id }}"></a>

답변이 반복되어 표시되는 for 문 바로 다음에 <a id="answer_{{ answer.id }}"></a>와 같이 앵커 태그를 추가했다. 앵커 태그의 name 속성은 유일한 값이어야 하므로 answer_{{ answer.id }}와 같이 답변 id를 사용했다.


/ 1.1 답변 redirect /

이제 답변을 등록하거나 수정할 때 위에서 지정한 앵커 태그로 이동하도록 코드를 수정하자. 다음은 답변 등록 또는 답변 수정을 한 뒤 사용했던 기존 코드의 일부이다.


Ex)
return redirect('pybo:detail', question_id=question.id)


여기에 앵커를 포함하면 다음과 같다.
Ex)
return redirect('{}#answer_{}'.format(
    resolve_url('pybo:detail', question_id=question.id), answer.id))

pybo:detail URL에 #answer_2와 같은 앵커를 추가하기 위해 resolve_url 함수를 사용했다. resolve_url은 실제 호출되는 URL 문자열을 리턴하는 장고의 함수이다.

따라서 answer_views.py의 answer_create, answer_modify, answer_vote 함수는 다음과 같이 변경해야 한다.

"pybo/views/answer_views.py"

Ex)
(... 생략 ...)
from django.shortcuts import render, get_object_or_404, redirect, resolve_url
(... 생략 ...)

@login_required(login_url='common:login')
def answer_create(request, question_id):
    (... 생략 ...)
            return redirect('{}#answer_{}'.format(
                resolve_url('pybo:detail', question_id=question.id), answer.id))
    (... 생략 ...)


@login_required(login_url='common:login')
def answer_modify(request, answer_id):
    (... 생략 ...)
    if request.method == "POST":
        form = AnswerForm(request.POST, instance=answer)
        if form.is_valid():
            (... 생략 ...)
            return redirect('{}#answer_{}'.format(
                resolve_url('pybo:detail', question_id=answer.question.id), answer.id))
    (... 생략 ...)

(... 생략 ...)

@login_required(login_url='common:login')
def answer_vote(request, answer_id):
    (... 생략 ...)
    return redirect('{}#answer_{}'.format(
                resolve_url('pybo:detail', question_id=answer.question.id), answer.id))

각 함수들 별로 return 값만 "resolve_url" 를 바탕으로 변경됬다.

return redirect('{}#answer_{}'.format(
                resolve_url('pybo:detail', question_id=question.id), answer.id))

이렇게 추가하면 된다.


answer_modify 함수를 보면 redirect 함수를 사용한 부분이 두 군데 있으므로 수정에 주의하자.